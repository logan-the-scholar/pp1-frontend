@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));

:root {
  --background: #171717;
  --foreground: #ffffff;
}

@property --bg-items-shadow {
  syntax: "*";
  inherits: false;
}

@utility bg-items-shadow-* {
  --bg-items-shadow: --value(--color-*, [color]);
}

@utility bg-items-* {
  & li {
    padding: 3px 5px 3px 5px;
    width: fit-content;
    cursor: pointer;

    background-color: --value(--color-*, [color]);
    /* background-color: --modifier(--color-*, [color]); */
    /* border: 0px 1px 1px 0px black; */

    box-shadow: 4px 4px 0px --modifier(--color-*, [color]);
    /* var(--bg-items-shadow); */

    &:hover {
      text-decoration: underline;
    }
  }
}

@utility ebox-* {

  &::after {
    z-index: -10;
    content: "";
    position: absolute;

    width: calc(--value(integer)% + 100%);
    height: calc(--value(integer)% + 100%);

    top: 0px;
    left: 0px;
    clip-path: polygon(--value(integer)% 100%, 0% calc(100% - --value(integer)%), 0% 0%, calc(100% - --value(integer)%) 0%, 100% --value(integer)%, 100% 100%);
    background-color: --value(--color-*, [color]);
    background-color: --modifier(--color-*, [color]);

  }

  &::before {
    content: "";
    position: absolute;
    z-index: 20;

    top: 100%;
    left: 100%;
    width: --value(integer)%;
    height: --value(integer)%;
    transform-origin: center;
    background-color: #000000;

    clip-path: polygon(0 1px, 1px 0, 100% 98%, 98% 100%);

  }

}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

body {
  color: var(--foreground);
  font-family: Mono, Menlo, Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif;
}

@keyframes blink {
  70% {
    opacity: 100;
  }

  50% {
    opacity: 100;
  }

  35% {
    opacity: 100;
  }

  20% {
    opacity: 0;
  }
}

.typing-effect {
  white-space: nowrap;
  overflow: hidden;
  animation: typing 4s steps(44) 1s 1 normal both;
}

@keyframes typing {
  from {
    width: 0;
  }

  to {
    width: 100%;
  }
}

.blinking-cursor {
  animation: blink 1s steps(2, start) infinite;
}


.grid-gradiant {
  background:
    radial-gradient(circle at bottom left, hsl(0, 0%, 2%) 5%, hsla(0, 0%, 1%, 0.9) 20%, rgba(0, 0, 0, 0) 50%),
    linear-gradient(to top right, hsl(0, 0%, 2%), transparent);
}

@keyframes shake {

  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%,
  60% {
    transform: translate3d(4px, 0, 0)
  }

}

.shaky {
  animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
}

.coded-button:hover span::before,
.coded-button:focus span::before {
  animation: coded-animation linear both 1.4s;
  /* animation-duration: 1s; */
}

.coded-button span {
  --spacing2: 1.2em;
  padding-inline: var(--spacing2);
  transition: 0.3s;
  box-sizing: border-box;
  position: relative;
  display: flex;
}

.coded-button span::before {
  color: #8f8f8f;
  content: "";
  box-sizing: border-box;
  position: absolute;
  justify-self: flex-start;
  background: inherit;
  text-orientation: sideways-right;
}

.gradient-button {
  position: relative;
}

button.gradient-button::before {
  --first-shadow: rgba(41, 41, 41, 0.733);
  --second-shadow: rgba(41, 41, 41, 0.733);
  top: 0;
  left: 0;
  box-sizing: border-box;
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  border-radius: inherit;
  /* background: linear-gradient(65deg, rgba(41, 41, 41, 0.623) 35%, rgba(41, 41, 41, 0.623) 54%, rgba(41, 41, 41, 0.733) 55%, rgba(41, 41, 41, 0.733) 65%, rgba(255, 255, 255, 0) 70%); */
  background: linear-gradient(45deg, var(--first-shadow) 45%, var(--first-shadow) 64%, var(--second-shadow) 65%, var(--second-shadow) 75%, rgba(255, 255, 255, 0) 76%);
}

/*TODO GENERALIZAR ESTE UTIL */

.gradient-1::before {
  --background: #5d0ec0;
  --shadow: #351174;
  --shadow2: #431a8a;
  top: 0;
  left: 0;
  box-sizing: border-box;
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  border-radius: inherit;
  background: linear-gradient(45deg, var(--shadow2) 45%, var(--shadow2) 64%, var(--shadow2) 65%, var(--shadow2) 75%, var(--background) 76%);
}


/* HELLYEA ANIMATIONS */

@property --direction {
  syntax: "*";
  inherits: false;
}

@property --re-direction {
  syntax: "*";
  inherits: false;
}

@utility animate-direction-* {
  --re-direction: --value(integer)%;
  --direction: --modifier(integer)%;
}

@utility -animate-direction-* {
  --re-direction: calc(--value(integer)%  * -1);
  --direction: calc(--modifier(integer)% * -1);
}

@utility animate-slide-* {
  /* --slide-direction: --value(percentage); */
  animation: slide --value(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --modifier(integer, [integer])ms;
  transform-origin: right;
}

@utility animate-re-slide-* {
  /* --re-slide-direction: --value(percentage); */
  opacity: 0;
  animation: re-slide --value(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --modifier(integer, [integer])ms;
  transform-origin: right;
}

/* @utility -animate-slide-* {
  --slide-direction: calc(--value(percentage) * -1);
  opacity: 1;
  animation: slide 1.5s ease-in-out forwards;
  transform-origin: right;
}

@utility -animate-re-slide-* {
  --re-slide-direction: calc(--value(percentage) * -1);
  opacity: 0;
  animation: re-slide 1.5s ease-in-out forwards;
  animation-delay: 200ms;
  transform-origin: right;
} */

@keyframes slide {
  0% {
    position: static;
    visibility: visible;
    transform: none;
    opacity: 1;
  }

  30% {
    opacity: 1;
  }
  
  99% {
    transform: translateX(var(--direction));
    opacity: 0;
  }

  100% {
    position: relative;
    visibility: hidden;
    opacity: 0;
  }
}

@keyframes re-slide {
  0% {
    position: relative;
    visibility: hidden;
    opacity: 0;
  }

  1% {
    transform: translateX(var(--re-direction));
    opacity: 0;
  }

  70% {
    opacity: 1;
  }

  100% {
    transform: none;
    visibility: visible;
    position: static;
    opacity: 1;
  }
}

@property --shrink-direction {
  syntax: "*";
  inherits: false;
}

@utility animate-shrink-* {
  animation: shrink --value(integer)ms var(--tw-ease) forwards;
  transform-origin: right;
}

@utility animate-re-shrink-* {
  animation: re-shrink --value(integer)ms var(--tw-ease) forwards;
  transform-origin: right;
}

@keyframes re-shrink {
  0% {
    opacity: 0;
    width: 0px;
  }

  1% {
    transform: scaleX(0);
    opacity: 0;
  }

  100% {
    transform: scaleX(1);
    opacity: 1;
  }
}

@keyframes shrink {
  0% {
    transform: scaleX(1);
    opacity: 1;
  }

  99% {
    transform: scaleX(0);
    opacity: 0;
  }

  100% {
    opacity: 0;
    width: 0px;
  }
}

@utility animate-drop-* {
  opacity: 0;
  height: 0px;
  animation: drop --modifier(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --value(integer, [integer])ms;
  transform-origin: top;
}

@utility animate-re-drop-* {
  animation: re-drop --modifier(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --value(integer, [integer])ms;
  transform-origin: top;
}

@keyframes drop {
  0% {
    opacity: 0;
    height: 0px;
  }

  1% {
    transform: scaleY(0);
    height: 1%;
    opacity: 0;
  }

  30% {
    opacity: 1;
  }

  100% {
    transform: scaleY(1);
    height: 100%;
    opacity: 1;
  }
}

@keyframes re-drop {
  0% {
    transform: scaleY(1);
    height: 100%;
    opacity: 1;
  }

  70% {
    opacity: 1;
  }

  99% {
    transform: scaleY(0);
    height: 1%;
    opacity: 0;
  }

  100% {
    opacity: 0;
    height: 0px;
  }
}


@utility animate-rise-* {
  opacity: 0;
  animation: rise --modifier(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --value(integer, [integer])ms;
  transform-origin: top;
}

@utility animate-re-rise-* {
  animation: re-rise --modifier(integer, [integer])ms var(--tw-ease) forwards;
  animation-delay: --value(integer, [integer])ms;
  transform-origin: top;
}

/* @utility animate-slide-* {
  --slide-direction: --value(percentage);
  opacity: 1;
  animation: slide 1.5s ease-in-out forwards;
  transform-origin: right;
}

@utility aniamte-re-slide-* {
  --re-slide-direction: --value(percentage);
  opacity: 0;
  animation: re-slide 1.5s ease-in-out forwards;
  animation-delay: 200ms;
  transform-origin: right;
} */

@keyframes rise {
  0% {
    position: relative;
    visibility: hidden;
    opacity: 0;
  }

  1% {
    transform: translateY(var(--direction));
    opacity: 0;
  }
  
  70% {
    opacity: 1;
  }
  
  100% {
    transform: none;
    visibility: visible;
    position: static;
    opacity: 1;
  }
}

@keyframes re-rise {
  0% {
    position: static;
    visibility: visible;
    transform: none;
    opacity: 1;
  }

  30% {
    opacity: 1;
  }

  99% {
    transform: translateY(var(--re-direction));
    opacity: 0;
  }

  100% {
    position: relative;
    visibility: hidden;
    opacity: 0;
  }
}




/* TODO HACER ESTO A UN UTIL y hacer la pesta√±a de chat tmb */

.line::before {
  z-index: -10;
  content: "";
  position: absolute;
  width: 100%;
  top: 2%;
  left: 90%;
  height: 3px;
  background-color:
    /* #e17100 */
    #fe9a00
    /* #7f22fe */
  ;
  /* border-bottom: 1px #5d0ec0; */

}